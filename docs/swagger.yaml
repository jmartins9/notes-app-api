basePath: /api
definitions:
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      password:
        type: string
      photo:
        description: URL to user's photo
        type: string
      settings:
        $ref: '#/definitions/models.UserSettings'
      updated_at:
        type: string
      user_id:
        type: integer
      username:
        type: string
    type: object
  models.UserSettings:
    properties:
      concentration_time:
        type: integer
      language:
        type: string
      relax_time:
        type: integer
      theme:
        type: string
      user_id:
        description: 1:1 with User
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    name: Jo√£o Martins, Miguel Braga
  description: API for a Notes Application
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Notes App API
  version: "1.0"
paths:
  /users:
    get:
      description: Get all registered users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: List users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a user with JSON payload
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    get:
      description: Retrieve a single user using their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user's username and photo
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User update data
        in: body
        name: user
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update user
      tags:
      - users
  /users/{id}/settings:
    get:
      description: Retrieve settings for a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserSettings'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get user settings
      tags:
      - settings
    put:
      consumes:
      - application/json
      description: Update or create settings for a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Settings data
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/models.UserSettings'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserSettings'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update user settings
      tags:
      - settings
swagger: "2.0"
